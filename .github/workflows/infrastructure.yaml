---
name: Infra CI

on:
  workflow_dispatch:
    inputs:
      RELEASE_TAG:
        description: '{Major}.{Minor}.{Patch}'


jobs:
# # FIRST JOB ####################################################################### 
# builds a test image and push to GHCR which will subequently be pulled by trivy scan jobs 

  build-test-image:
    name: Build Image for Testing
    runs-on: ubuntu-latest
    permissions:
     contents: write 
     packages: write 

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          

      - name: Extract metadata for the Docker image
        id: docker_meta  
        uses: docker/metadata-action@v5
        with:
         images: ghcr.io/${{ github.repository }}
         tags: |
            ${{ github.run_id }}

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-to: |
            type=gha,scope=main-base,mode=max
          cache-from: |
            type=gha,scope=main-base
          platforms: linux/amd64

         
# # # # # NEXT JOB #######################################################################  
# pulls test image from GHCR and run a trivy vulnerability scan for high and crtical CVEs (non-blocking) 
# and uploads the sarif result to github security tab
  scan-image:
    name: Scan Image with Trivy
    needs: [build-test-image]
    runs-on: ubuntu-latest

    permissions:
      contents: read 
      packages: read 
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          

      - name: Downcase repo name
        run: |
              echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}


      - name: Run Trivy for HIGH,CRITICAL CVEs and report (non-blocking)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ghcr.io/${{env.REPO}}:${{ github.run_id }}
          format: sarif # table, json, sarif
          exit-code: 0 # 1 or 0. 0 means don't fail the job if issues are found
          ignore-unfixed: true # Ignore unpatched/unfixed vulnerabilities
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL' # UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          timeout: 10m0s
          output: 'trivy-results.sarif'
        env:
          TRIVY_USERNAME: ${{ github.repository_owner }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() 
        with:
          sarif_file: 'trivy-results.sarif'


         
# NEXT JOB #######################################################################  
# builds the final image 

  build-final-image:
    name: Build Final Image
    needs: [scan-image]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write 
      pull-requests: write 

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/example
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=raw,value=${{ inputs.RELEASE_TAG }}

      - name: Docker Build and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: |
             ${{ steps.docker_meta.outputs.tags }} , 
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            type=gha,scope=main-base
          platforms: linux/amd64

   
